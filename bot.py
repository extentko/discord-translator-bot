import discord
from deep_translator import GoogleTranslator
from langdetect import detect
import os

# üîπ –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—å—Å—è –∑ Environment Variable –Ω–∞ Render
TOKEN = os.environ.get("TOKEN")

# üîπ –í–∫–∞–∂–∏ ID –∫–∞–Ω–∞–ª—É –ø–µ—Ä–µ–∫–ª–∞–¥—É
TRANSLATOR_CHANNEL_ID = 1424469331407929564  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π –∫–∞–Ω–∞–ª

intents = discord.Intents.default()
intents.message_content = True
client = discord.Client(intents=intents)

# üîπ –ú–∞–ø–∞ –º–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É
LANGUAGES = ["da", "uk", "en"]

def translate_message(text, src_lang):
    translations = {}
    for lang in LANGUAGES:
        if lang != src_lang:
            translated = GoogleTranslator(source=src_lang, target=lang).translate(text)
            translations[lang] = translated
    return translations

@client.event
async def on_ready():
    print(f"‚úÖ Logged in as {client.user}")

@client.event
async def on_message(message):
    # –ù–µ —Ä–µ–∞–≥—É—î–º–æ –Ω–∞ –≤–ª–∞—Å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if message.author == client.user:
        return

    # –ü–µ—Ä–µ–∫–ª–∞–¥ —Ç—ñ–ª—å–∫–∏ –≤ –ø–µ–≤–Ω–æ–º—É –∫–∞–Ω–∞–ª—ñ
    if message.channel.id != TRANSLATOR_CHANNEL_ID:
        return

    try:
        detected_lang = detect(message.content)
    except:
        return  # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º–æ–≤—É

    if detected_lang not in LANGUAGES:
        return  # –Ø–∫—â–æ –º–æ–≤–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è

    translations = translate_message(message.content, detected_lang)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
    for lang, text in translations.items():
        flag = {
            "da": "üá©üá∞",
            "uk": "üá∫üá¶",
            "en": "üá¨üáß"
        }.get(lang, "")
        await message.channel.send(f"{flag} ‚ûú {text}")
print(f"TOKEN: {TOKEN}")
client.run(TOKEN)
